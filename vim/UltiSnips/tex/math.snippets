# defining texMathZone
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal


###########
# symbols #
###########
context "math()"
snippet ;0 "empty set" iA
\emptyset
endsnippet

context "math()"
snippet ;6 "partial" iA
\partial
endsnippet

context "math()"
snippet ;8 "infinity" iA
\infty
endsnippet

context "math()"
snippet ;= "isomorphic/congruent" iA
\cong
endsnippet

context "math()"
snippet := "colon equals" iA
\coloneqq
endsnippet

context "math()"
snippet ;\ "set complement" iA
\setminus
endsnippet

context "math()"
snippet ;. "dot/multiplication" iA
\cdot
endsnippet

context "math()"
snippet ;* "cross product" iA
\times
endsnippet

context "math()"
snippet ;( "subset w/o bar" iA
\subset
endsnippet

context "math()"
snippet ;) "supset w/o bar" iA
\supset
endsnippet

context "math()"
snippet ;[ "subset w/ bar" iA
\subseteq
endsnippet

context "math()"
snippet ;] "supset w/ bar" iA
\supseteq
endsnippet

context "math()"
snippet ;{ "proper subset" iA
\subsetneq
endsnippet

context "math()"
snippet ;} "proper supset" iA
\supsetneq
endsnippet

context "math()"
snippet ;| "better |" iA
\mid
endsnippet

context "math()"
snippet ;: "colon w/o space before it" iA
\colon
endsnippet

context "math()"
snippet ;@ "composition" iA
\circ
endsnippet

context "math()"
snippet ",<p " "inner product placeholders" rA
\langle\cdot,\cdot\rangle
endsnippet


###############################
# superscripts and subscripts #
###############################
context "math()"
snippet ^^ "superscript" iA
^{$1}
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}
endsnippet

# context "math()"
# snippet ^( "superscript index" iA
# ^{($1)}
# endsnippet

# context "math()"
# snippet ^_ "super+subscript index" iA
# ^{($1)}_{$2}
# endsnippet

context "math()"
snippet "(?<=[a-zA-Z0-9])(\^|_)tx" "text super/subscript" rA
`!p snip.rv = match.group(1)`{\mathrm{$1}}
endsnippet

# a-- -> a^{-1}
context "math()"
snippet "(?<=[a-zA-Z0-9]|[\)\]\}\}])--" "^{-1}" rA
^{-1}
endsnippet

# a00 -> a_0
context "math()"
snippet "(?<=[a-zA-Z]|[\)\]\}\}])00" "_0" rA
_0
endsnippet

# a^100 -> a^{100}, a_-2 -> a_{-2}
context "math()"
snippet "(?<=[a-zA-Z0-9]|[\)\]\}\|])(\^|_)(-[0-9]+|[0-9]{2,}) " "numerical super/subscript" rA
`!p snip.rv = match.group(1)`{`!p snip.rv = match.group(2)`}
endsnippet


##########################
# general math operators #
##########################
context "math()"
snippet "\.ff " "fraction" rA
\frac{$1}{$2}
endsnippet

context "math()"
snippet "\.ffi " "inverse" rA
\frac{1}{$1}
endsnippet

context "math()"
snippet "\.ffi([a-zA-Z0-9\\]+) " "inverse" rA
\frac{1}{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet "\.sq([a-zA-Z0-9]+)? " "sqrt" rA
\sqrt`!p
snip.rv = "["+match.group(1)+"]" if match.group(1) != None else ""
`{$1}
endsnippet

context "math()"
snippet "\.bin? " "binomial coefficient" rA
\binom{$1}{$2}
endsnippet


########
# sums #
########
context "math()"
snippet "\.su?m " "sum" rA
\sum_{$1}^{$2}
endsnippet

context "math()"
snippet "\.su?ml " "sum w/ only lower limit" rA
\sum_{$1}
endsnippet

context "math()"
snippet "\.su?mf(\d+)? " "infinite sum" rA
\sum_{${1:n}=`!p snip.rv = match.group(1) if match.group(1) != None else "1"`}^{\infty}
endsnippet

context "math()"
snippet "\.su?mp " "infinite sum starting at 0" rA
\sum_{${1:n}=0}^{\infty}
endsnippet

context "math()"
snippet "\.su?mff " "sum from -\infty to +\infty" rA
\sum_{${1:n}=-\infty}^{\infty}
endsnippet


############
# products #
############
context "math()"
snippet "\.pr(od)? " "product" rA
\prod_{$1}^{$2}
endsnippet

context "math()"
snippet "\.pr(od)?l " "product w/ only lower limit" rA
\prod_{$1}
endsnippet

context "math()"
snippet "\.pr(od)?f(\d+)? " "infinite product" rA
\prod_{${1:k}=`!p snip.rv = match.group(1) if match.group(1) != None else "0"`}^{\infty}
endsnippet


#############
# cups/caps #
#############
context "math()"
snippet "\.cup? " "union" rA
\bigcup_{$1}^{$2}
endsnippet

context "math()"
snippet "\.cup?l " "union with only lower limit" rA
\bigcup_{$1}
endsnippet

context "math()"
snippet "\.cup?f " "union from 1 to \infty" rA
\bigcup_{${1:i}=1}^{\infty}
endsnippet

context "math()"
snippet "\.cup?ff " "union from -\infty to \infty" rA
\bigcup_{${1:i}=-\infty}^{\infty}
endsnippet

context "math()"
snippet "\.cup?s " "square union" rA
\bigsqcup_{$1}^{$2}
endsnippet

context "math()"
snippet "\.cup?sl " "square union with only lower limit" rA
\bigsqcup_{$1}
endsnippet

context "math()"
snippet "\.cap? " "intersection" rA
\bigcap_{$1}^{$2}
endsnippet

context "math()"
snippet "\.cap?l " "intersection with only lower limit" rA
\bigcap_{$1}
endsnippet

context "math()"
snippet "\.cap?f " "intersection from 1 to \infty" rA
\bigcap_{${1:i}=1}^{\infty}
endsnippet

context "math()"
snippet "\.cap?ff " "intersection from -\infty to \infty" rA
\bigcap_{${1:i}=-\infty}^{\infty}
endsnippet


#########
# lists #
#########
snippet .. "lower dots" iA
\ldots
endsnippet

snippet :: "center dots" iA
\cdots
endsnippet

context "math()"
snippet "(?<![a-zA-Z0-9])xxx " "x_1, ..., x_n" rA
${1:x}_1,\ldots,$1_${2:n}
endsnippet

context "math()"
snippet "(?<![a-zA-Z0-9])xx2 " "x_1, ..., x_n" rA
${1:x}_1, $1_2 \ldots, $1_${2:n}
endsnippet

context "math()"
snippet "xxu " "x + .... + x" rA
\underbrace{${1:x} + \cdots + $1}_{\text{$${2:n}$ times}}
endsnippet

context "math()"
snippet "xxu2 " "x + .... + x" rA
\underbrace{${1:x} + $1 + \cdots + $1}_{\text{$${2:n}$ times}}
endsnippet


##########
# limits #
##########
context "math()"
snippet "\.li?m " "limit" rA
\lim_{${1:x \to a}}
endsnippet

context "math()"
snippet "\.li?mf " "limit to \infty" rA
\lim_{${1:x} \to \infty}
endsnippet

context "math()"
snippet "\.li?mnf " "limit to -\infty" rA
\lim_{${1:x} \to -\infty}
endsnippet

context "math()"
snippet "\.li?mz " "limit to 0" rA
\lim_{${1:x} \to 0}
endsnippet

context "math()"
snippet "\.li?mv([a-zA-Z]|\\[a-zA-Z]+) " "limit with variable" rA
\lim_{`!p snip.rv = match.group(1)` \to ${1:a}}
endsnippet

context "math()"
snippet "\.li?ms " "limit" rA
\limsup_{${1:x \to a}}
endsnippet

context "math()"
snippet "\.li?msf " "limit to \infty" rA
\limsup_{${1:x} \to \infty}
endsnippet

context "math()"
snippet "\.li?mi " "limit" rA
\liminf_{${1:x \to a}}
endsnippet

context "math()"
snippet "\.li?mif " "limit to \infty" rA
\liminf_{${1:x} \to \infty}
endsnippet


###############
# derivatives #
###############
context "math()"
snippet "\.dd " "derivative" rA
\frac{d$1}{d${2:x}}
endsnippet

context "math()"
snippet "\.dd([a-zA-Z0-9\\_\^'(){}\[\]+\-]+) " "derivative w/ var" rA
\frac{d$1}{d`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet "\.dd([a-zA-Z0-9\\_\^'(){}\[\]+\-]+),([0-9]|\\[a-zA-Z]+) " "multiple derivative" rA
\frac{d^`!p snip.rv = match.group(2)`$1}{d`!p snip.rv = match.group(1)`^`!p snip.rv = match.group(2)`}
endsnippet

# partial derivatives
context "math()"
snippet "\.dp " "partial" rA
\frac{\partial$1}{\partial$2}
endsnippet

context "math()"
snippet "\.dp([a-zA-Z][a-zA-Z0-9\\_\^'(){}\[\]+\-]*) " "partial w/ var " rA
\frac{\partial$1}{\partial `!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet "\.dp(\\[a-zA-Z0-9\\_\^'(){}\[\]+\-]+) " "partial w/ slash var " rA
\frac{\partial$1}{\partial`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet "\.dp([a-zA-Z][a-zA-Z0-9\\_\^'(){}\[\]+\-]*),([0-9]|\\[a-zA-Z]+) " "multiple derivative" rA
\frac{\partial^`!p snip.rv = match.group(2)`$1}{\partial `!p snip.rv = match.group(1)`^`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet "\.dp(\\[a-zA-Z0-9\\_\^'(){}\[\]+\-]+),([0-9]|\\[a-zA-Z]+) " "multiple derivative w/ slash" rA
\frac{\partial^`!p snip.rv = match.group(2)`$1}{\partial`!p snip.rv = match.group(1)`^`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet "\.dp,x([a-zA-Z0-9]|\\[a-zA-Z]+) " "derivative w/ var" rA
\frac{\partial$1}{\partial x^`!p snip.rv = match.group(1)`}
endsnippet


#############
# integrals #
#############
context "math()"
snippet "\.int? " "integral" rA
\int_{$1}^{$2}
endsnippet

context "math()"
snippet "\.int?l " "integral w/ only lower limit" rA
\int_{$1}
endsnippet

context "math()"
snippet "\.int?f " "integral from 0 to +\infty" rA
\int_{0}^{\infty}
endsnippet

context "math()"
snippet "\.int?ff " "integral from -\infty to +\infty" rA
\int_{-\infty}^{\infty}
endsnippet

context "math()"
snippet "\.int?p " "integral from 0 to 2\pi" rA
\int_{0}^{2\pi}
endsnippet

context "math()"
snippet "\.int?pp " "integral from -\pi to \pi" rA
\int_{-\pi}^{\pi}
endsnippet

context "math()"
snippet "\.int?rn? " "integral over \RR^n" rA
\int_{\RR^n}
endsnippet

context "math()"
snippet "\.int?rd " "integral over \RR^d" rA
\int_{\RR^d}
endsnippet


###########
# tensors #
###########
context "math()"
snippet "\.tn " "tensor" rA
\tensor{$1}{$2}
endsnippet

context "math()"
snippet "\.tn,([a-zA-Z]|\\[a-zA-Z]+)((?:[_\^](?:[a-zA-Z0-9\\]+|(?:\{[a-zA-Z0-9\\_\^'\+-\{\}\s]+\})))+) " "tensor w/ two args" rA
\tensor{`!p snip.rv = match.group(1)`}{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet "\.tnt " "general tensor" rA
\tensor{T}{^{\mu_1\cdots\mu_k}_{\nu_1\cdots\nu_\ell}}
endsnippet


################
# oplus/otimes #
################
context "math()"
snippet "\.\+ " "\oplus" rA
\oplus
endsnippet

context "math()"
snippet "\.\+\+ " "\bigoplus" rA
\bigoplus_{$1}^{$2}
endsnippet

context "math()"
snippet "\.\* " "\oplus" rA
\otimes
endsnippet

context "math()"
snippet "\.\*\* " "\bigoplus" rA
\bigotimes_{$1}^{$2}
endsnippet
