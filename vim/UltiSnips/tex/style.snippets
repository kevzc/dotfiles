# defining texMathZone
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal


#############
# templates #
#############
# default template
context "not math()"
snippet templ "normal template" b
\documentclass{scrartcl}
\usepackage[fancy]{kev}

\title{$1}
\author{Kevin Chen}
\date{$2}

\begin{document}
\maketitle

$0

\end{document}
endsnippet

# default template with roman numerals
context "not math()"
snippet templ-r "normal template" b
\documentclass{scrartcl}
\usepackage[fancy]{kev}
\renewcommand{\thesubsection}{\thesection.\roman{subsection}}

\title{$1}
\author{Kevin Chen}
\date{$2}

\begin{document}
\maketitle

$0

\end{document}
endsnippet

# template for beamer
context "not math()"
snippet templ-beamer "beamer template" b
\documentclass{beamer}
\usepackage[beamer]{kev}

\title{$1}
\author{Kevin Chen}
\date{$2}

\begin{document}
\maketitle

$0

\end{document}
endsnippet


##############
# formatting #
##############
context "not math()"
snippet bf "bold"
\textbf{${1:${VISUAL}}}
endsnippet

context "math()"
snippet bf "bold" i
\mathbf{${1:${VISUAL}}}
endsnippet

context "not math()"
snippet it "italics" i
\textit{${1:${VISUAL}}}
endsnippet

context "math()"
snippet rm "roman" i
\mathrm{${1:${VISUAL}}}
endsnippet

context "not math()"
snippet voc "vocab"
\vocab{${1:${VISUAL}}}
endsnippet

context "math()"
snippet box "boxed" i
\boxed{${1:${VISUAL}}}
endsnippet

context "math()"
snippet boxl "boxed new line" i
\boxed{
	${1:${VISUAL}}
}
endsnippet


########
# text #
########
context "math()"
snippet "\.tt " "text" rA
\text{${1:${VISUAL}}}
endsnippet

context "math()"
snippet "\.ttf " "text" rA
\text{for each $$1$}
endsnippet

context "math()"
snippet "\.ttfa " "text" rA
\text{for all $$1$}
endsnippet

context "math()"
snippet "\.tto " "text" rA
\text{on $$1$}
endsnippet

context "math()"
snippet "\.qq " "qquad" rA
\qquad
endsnippet

context "math()"
snippet "\.qq?t " "qquad with text" rA
\qquad\text{$1}
endsnippet


############
# sections #
############
snippet sec "section"
\section{$1}

${0:${VISUAL:%% text here}}
endsnippet

snippet sub "subsection"
\subsection{$1}

${0:${VISUAL:%% text here}}
endsnippet

snippet subsub "subsubsection"
\subsubsection{$1}

${0:${VISUAL:%% text here}}
endsnippet

snippet sec* "section"
\section*{$1}

${0:${VISUAL:%% text here}}
endsnippet

snippet sub* "subsection"
\subsection*{$1}

${0:${VISUAL:%% text here}}
endsnippet

snippet subsub* "subsubsection"
\subsubsection*{$1}

${0:${VISUAL:%% text here}}
endsnippet

snippet "sp(\d+)" "sec-prob" br
`!p snip.rv = "\\section{Problem " + match.group(1) + "}"`

${0:${VISUAL:%% text here}}
endsnippet

snippet "ssp(\d+)" "subsec-prob" br
`!p snip.rv = "\\subsection{Problem " + match.group(1) + "}"`

${0:${VISUAL:%% text here}}
endsnippet

snippet sece "section"
\section{$1}

${0:${VISUAL:%% text here}}

\eject
endsnippet


###################
# ad hoc snippets #
###################
context "not math()"
snippet texpdf "texorpdfstring" i
\texorpdfstring{$$1$}{$2}
endsnippet

context "not math()"
snippet gpath "description" b
\graphicspath{ {./images/} }
endsnippet

context "not math()"
snippet sec-r "roman numeral subsection" b
\renewcommand{\thesubsection}{\thesection.\roman{subsection}}
endsnippet
